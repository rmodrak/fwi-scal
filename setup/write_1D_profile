#!/usr/bin/env python

import numpy as np
from matplotlib import pyplot


def gauss1(z,mu,sigma):
    return np.exp(-0.5*((z-mu)/sigma)**2)



if __name__=='__main__':

    # define control points
    nc = 4

    zc = np.array([
        0.0,
        5.5,
        16.0,
        32.0,
        ])

    vc = np.array([
        5.5,
        6.3,
        6.7,
        7.8,
        ])

    # finely-spaced profiles
    zmin = 0.
    zmax = 20.
    nz = 100
    z = np.linspace(zmin,zmax,nz)
    vp = np.zeros(nz)
    for _i in range(nc-1):
        vp[np.where((zc[_i] <= z) & (z < zc[_i+1]))] = vc[_i]

    # apply smoothing
    sigma = 5.

    w = np.empty(nz)
    for _i in range(nz):
        pyplot.plot(z,gauss1(z,z[_i],sigma))
        w[_i] = np.sum(gauss1(z,z[_i],sigma))

    vp_smooth = np.empty(nz)
    for _i in range(nz):
        vp_smooth[_i] = np.sum(vp*gauss1(z,z[_i],sigma))/w[_i]


    if True:
        pyplot.plot(z,vp)
        pyplot.savefig('profile_vp.png')
        pyplot.close()

        pyplot.plot(z,vp_smooth)
        pyplot.savefig('profile_vp_smooth.png')
        pyplot.close()


    if True:
        np.savetxt('profile_vp.txt', np.column_stack((z, vp)))
        np.savetxt('profile_vp_smooth.txt', np.column_stack((z, vp_smooth)))

